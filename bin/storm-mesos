#!/bin/bash
# storm-mesos

if [ -z "$1" ]; then
  echo "Usage: `basename $0` [<args>]" >&2
  exit 1
fi

if [ -z ${MESOS_NATIVE_LIBRARY+x} ]
then
  echo "WARNING: MESOS_NATIVE_LIBRARY is not set"
  MESOS_NATIVE_LIBRARY="/usr/local/lib/libmesos.so"
fi
export MESOS_NATIVE_LIBRARY="${MESOS_NATIVE_LIBRARY}"


#if [ -z "$JAVA_HOME" ]; then
#  echo "JAVA_HOME is not set" >&2
#  exit 1
#fi

FWDIR="/etc/storm"
#RUNNER="${JAVA_HOME}/bin/java"
RUNNER="java"

if [ -z "$STORM_CORE_DIR" ] ; then
  STORM_CORE_DIR="/usr/lib/storm-mesos"
fi
STORM_LIBRARY_PATH="${STORM_CORE_DIR}/lib"

# Figure out how much memory to use per executor and set it as an environment
# variable so that our process sees it and can report it to Mesos
if [ -z "$STORM_MEM" ] ; then
  STORM_MEM="512m"
fi
export STORM_MEM

if [ -z "$STORM_CONF_FILE" ]; then
  STORM_CONF_FILE="/usr/lib/storm-mesos/conf/storm.yaml"
fi


# Set JAVA_OPTS to be able to load native libraries and to set heap size
JAVA_OPTS="$STORM_JAVA_OPTS"
JAVA_OPTS="$JAVA_OPTS -Djava.library.path=$STORM_LIBRARY_PATH"
JAVA_OPTS="$JAVA_OPTS -Xms$STORM_MEM -Xmx$STORM_MEM -Dstorm.home=$STORM_CORE_DIR -Dstorm.conf.file=$STORM_CONF_FILE"
# Load extra JAVA_OPTS from conf/java-opts, if it exists
if [ -e $FWDIR/java-opts ] ; then
  JAVA_OPTS="$JAVA_OPTS `cat $FWDIR/java-opts`"
fi
export JAVA_OPTS

# Build up classpath
CL_PATH="${STORM_CORE_DIR}/storm-mesos-cvut.jar"
#CL_PATH+=:`ls /usr/lib/storm/storm-core-*.jar`
#CL_PATH+=:`ls /usr/lib/storm/storm-netty-*.jar`
#CL_PATH+=:`ls /usr/lib/storm/storm-console-*.jar`
for jar in `find $STORM_LIBRARY_PATH -name '*jar'`; do
  CL_PATH+=":$jar"
done

if [ $1 = "supervisor" ]; then
  CMD="storm.mesos.MesosSupervisor"
elif [ $1 = "nimbus" ]; then
  CMD="storm.mesos.MesosNimbus"
else
  echo "unknown command"
  exit 1
fi


EXTRA_ARGS="$JAVA_OPTS"
echo "cmd: $RUNNER -cp $CL_PATH $EXTRA_ARGS $CMD"
exec "$RUNNER" -cp "$CL_PATH" "$CMD" "$EXTRA_ARGS"

