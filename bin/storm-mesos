#!/bin/bash
# storm-mesos

if [ -z "$1" ]; then
  echo "Usage: `basename $0` [<args>]" >&2
  exit 1
fi

if [ -z ${MESOS_NATIVE_LIBRARY+x} ]
then
  echo "WARNING: MESOS_NATIVE_LIBRARY is not set"
  MESOS_NATIVE_LIBRARY="/usr/local/lib/libmesos.so"
fi
export MESOS_NATIVE_LIBRARY="${MESOS_NATIVE_LIBRARY}"


FWDIR="/etc/storm"
#RUNNER="${JAVA_HOME}/bin/java"
RUNNER="java"

if [ -f /etc/default/storm ] ; then
  . /etc/default/storm
fi

if [ -f /etc/default/storm-mesos ] ; then
  . /etc/default/storm-mesos
fi

# Figure out how much memory to use per executor and set it as an environment
# variable so that our process sees it and can report it to Mesos
if [ -z "$STORM_MEM" ] ; then
  STORM_MEM="512m"
fi
export STORM_MEM

STORM_MESOS_JAR="${STORM_HOME}/storm-mesos-cvut.jar"

if [ -z "$STORM_CONF" ]; then
  STORM_CONF="/etc/storm"
fi

STORM_CLASSPATH="${STORM_MESOS_JAR}:$STORM_CLASSPATH"

# Set JAVA_OPTS to be able to load native libraries and to set heap size
JAVA_OPTS="$STORM_JVM_OPTS"
JAVA_OPTS="$JAVA_OPTS -Djava.library.path=$STORM_LIB"
JAVA_OPTS="$JAVA_OPTS -Xms$STORM_MEM -Xmx$STORM_MEM -Dstorm.home=$STORM_HOME"


if [ $1 = "supervisor" ]; then
  CMD="storm.mesos.MesosSupervisor"
elif [ $1 = "nimbus" ]; then
  CMD="storm.mesos.MesosNimbus"
else
  echo "unknown command, use either 'nimbus' or 'supervisor'"
  exit 1
fi

EXTRA_ARGS="$JAVA_OPTS"
#echo "cmd: $RUNNER -cp $STORM_CLASSPATH $EXTRA_ARGS $CMD"
exec "$RUNNER" -cp "$STORM_CLASSPATH" "$CMD" "$EXTRA_ARGS"
